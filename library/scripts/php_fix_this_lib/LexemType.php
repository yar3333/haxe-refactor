<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

use \php\Boot;
use \php\_Boot\HxEnum;

class LexemType extends HxEnum {
	/**
	 * @return LexemType
	 */
	static public function ARROW () {
		static $inst = null;
		if (!$inst) $inst = new LexemType('ARROW', 2, []);
		return $inst;
	}

	/**
	 * @return LexemType
	 */
	static public function BEG_FIGURE_BRACKET () {
		static $inst = null;
		if (!$inst) $inst = new LexemType('BEG_FIGURE_BRACKET', 3, []);
		return $inst;
	}

	/**
	 * @return LexemType
	 */
	static public function COMMENT () {
		static $inst = null;
		if (!$inst) $inst = new LexemType('COMMENT', 0, []);
		return $inst;
	}

	/**
	 * @return LexemType
	 */
	static public function END_FIGURE_BRACKET () {
		static $inst = null;
		if (!$inst) $inst = new LexemType('END_FIGURE_BRACKET', 4, []);
		return $inst;
	}

	/**
	 * @return LexemType
	 */
	static public function ID () {
		static $inst = null;
		if (!$inst) $inst = new LexemType('ID', 5, []);
		return $inst;
	}

	/**
	 * @return LexemType
	 */
	static public function OTHER () {
		static $inst = null;
		if (!$inst) $inst = new LexemType('OTHER', 6, []);
		return $inst;
	}

	/**
	 * @return LexemType
	 */
	static public function STRING () {
		static $inst = null;
		if (!$inst) $inst = new LexemType('STRING', 1, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			2 => 'ARROW',
			3 => 'BEG_FIGURE_BRACKET',
			0 => 'COMMENT',
			4 => 'END_FIGURE_BRACKET',
			5 => 'ID',
			6 => 'OTHER',
			1 => 'STRING',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'ARROW' => 0,
			'BEG_FIGURE_BRACKET' => 0,
			'COMMENT' => 0,
			'END_FIGURE_BRACKET' => 0,
			'ID' => 0,
			'OTHER' => 0,
			'STRING' => 0,
		];
	}
}

Boot::registerClass(LexemType::class, 'LexemType');
