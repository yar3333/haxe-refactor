{
	typeNamesMapping:
	{
		 'int'      : 'Int'
		,'integer'  : 'Int'
		,'float'    : 'Float'
		,'bool'     : 'Bool'
		,'boolean'  : 'Bool'
		,'string'   : 'String'
		,'array'    : 'NativeArray'
		,'mixed'    : 'Dynamic'
		,'mixes'    : 'Dynamic'
		,'object'   : 'Dynamic'
		,'void'     : 'Void'
		,'resource' : 'Resource'
		
		,'true'     : 'Bool'
		,'false'    : 'Bool'
		
		,'scalar'   : 'Dynamic'
		,'callable' : 'haxe.Constraints.Function'
	},
	
	varNamesMapping:
	{
		 '_POST'    : '/*$_POST*/php.Web.getParams()'
		,'_GET'     : '/*$_GET*/php.Web.getParams()'
		,'__FILE__' : "untyped __php__('__FILE__')"
		,'_SESSION' : "php.Session"
	},

	magickFunctionNameMapping:
	{
		 '__construct' : 'new'
	},
	
	reservedWords:
	[
		 'return'
		,'function'
		,'new'
	],
	
	functionNameMapping:
	{
		 'str_starts_with'          : ['(',0,')', '.', 'startsWith', '(', 1, ')']
		,'str_ends_with'            : ['(',0,')', '.', 'endsWith', '(', 1, ')']
		
		,'ltrim'                    : ['(',0,')', '.', 'ltrim', '(', 1, ')']
		,'rtrim'                    : ['(',0,')', '.', 'rtrim', '(', 1, ')']
		,'trim'                     : ['(',0,')', '.', 'trim', '(', 1, ')']
		,'strip_tags'               : 'StringTools.stripTags'
		,'sprintf'                  : 'StringTools.format'
		,'str_pad'                  : 'StringTools.pad'
		
		,'abs'                      : 'Math.abs'
		,'round'                    : 'Math.round'
		,'min'                      : 'Math.min'
		,'max'                      : 'Math.max'
		,'pow'                      : 'Math.pow'
		,'sqrt'                     : 'Math.sqrt'
		
//		,'htmlspecialchars'         : 'StringTools.htmlEscape'
//		,'htmlspecialchars_decode'  : 'StringTools.htmlUnescape'
		
		,'serialize'                : 'php.Lib.serialize'
		,'unserialize'              : 'php.Lib.unserialize'
		
		,'header'                   : 'php.Web.setHeader'
		
		,'dirname'                  : 'sys.io.Path.directory'
		,'file_get_contents'        : 'sys.io.File.getContent'
		,'file_put_contents'        : 'sys.io.File.saveContent'
		,'file_exists'              : 'sys.FileSystem.exists'
		,'is_file'                  : ['sys.FileSystem.exists(', 0, ') && !sys.FileSystem.isDirectory(', 0, ')']
		,'is_dir'                   : ['sys.FileSystem.exists(', 0, ') && sys.FileSystem.isDirectory(', 0, ')']
		,'realpath'                 : 'sys.FileSystem.fullPath'
		,'unlink'                   : 'sys.FileSystem.deleteFile'
		,'mkdir'                    : 'sys.FileSystem.createDirectory'
		,'filemtime'                : ['sys.FileSystem.stat(',0,').mtime.getTime()']
		
		,'microtime'                : 'Sys.time'
		,'time'                     : 'Sys.time'
		
		,'substr'                   : ['(',0,')', '.', 'substr', '(', 1, ', ', 2, ')']
		,'strlen'                   : ['(',0,')', '.', 'length']
		,'str_replace'              : ['(',2,')', '.', 'replace', '(', 0, ', ', 1, ')']
		,'strpos'                   : ['(',0,')', '.', 'indexOf', '(', 1, ', ', 2, ')']
		,'strrpos'                  : ['(',0,')', '.', 'lastIndexOf', '(', 1, ', ', 2, ')']
		,'strtolower'               : ['(',0,')', '.', 'toLowerCase', '(', ')']
		,'strtoupper'               : ['(',0,')', '.', 'toUpperCase', '(', ')']
//		,'json_encode'              : 'StringTools.jsonEncode'
//		,'json_decode'              : 'StringTools.jsonDecode'
		
		,'count'                    : ['(',0,')', '.', 'length']
		,'explode'                  : ['(',1,')', '.', 'split', '(', 0, ')']
		,'implode'                  : ['(',1,')', '.', 'join', '(', 0, ')']
		,'array_slice'              : ['(',0,')', '.', 'slice', '(', 1, ',', 2, ')']
		,'array_splice'             : ['(',0,')', '.', 'splice', '(', 1, ', ', 2, ')']
		,'array_push'               : ['(',0,')', '.', 'push', '(', 1, ')']
		,'array_pop'                : ['(',0,')', '.', 'pop', '(', 1, ')']
		,'array_shift'              : ['(',0,')', '.', 'shift', '(', 1, ')']
		,'array_unshift'            : ['(',0,')', '.', 'unshift', '(', 1, ')']
		
		,'array_search'             : ['(',1,')', '.', 'indexOf', '(', 0, ')']
//		,'array_key_exists'        => array('(',1,')', '.', 'exists', '(', 0, ')')
		
//		,'array_keys'              => array('(',0,')', '.', 'keys()')
		
//		,'method_exists'           => array('Reflect.hasMethod(Type.resolveClass_getClass(',0,'), ',1,')')
//		,'class_exists'            => 'Type.resolveClass'
		
		,'exit'                     : 'Sys.exit'
		
		// GD to ImageMagick
//		,'imagesx'                 => array('(',0,')', '.', 'getImageWidth()')
//		,'imagesy'                 => array('(',0,')', '.', 'getImageHeight()')
//		,'imagecreatetruecolor'    => 'new Imagick'
		
		,'sha1'                     : 'haxe.crypto.Sha1.encode'
		,'md5'                      : 'haxe.crypto.Md5.encode'
		,'chr'						: 'String.fromCharCode'
	}
}
