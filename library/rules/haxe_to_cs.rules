// Haxe to C#

ID = [_a-zA-Z][_a-zA-Z0-9]*
LONGID = ID(?:[.]ID)*
VALUE = ID(?:[.]ID)*
TYPE = ID(?:\s*<[^>]+>)?

/\n/\n\t/

/import\s+(VALUE);/using $1/

/:(\s*)String/:$1string/
/:(\s*)Int/:$1int/
/:(\s*)Float/:$1double/
/:(\s*)Bool/:$1bool/
/:(\s*)Void/:$1void/
/:(\s*)Array/:$1List/
/:(\s*)Map/:$1Dictionary/

/^\s*package\s+(LONGID)\s*;\s*/namespace $1\n{\n\t/m

/typedef\s+(ID)\s*=/class $1/
/var\s+(ID)\s*:\s*(TYPE)/$2 $1/

/([(,;]\s*)(ID)\s*:\s*(ID)/$1$3 $2/

/function\s+(ID[(][^)]*[)])\s*:\s*(TYPE)/$2 $1/
/function\s+(ID[(][^)]*[)])/void $1/

/\bprivate\b/protected/

/for(\s*[(]\s*)/foreach$1var /

/void\s+toString/string toString/

/\bMath\.([a-z])/Math.$^1/

/\bprotected\s+class\b/class/

/[.]length\b/.Length/
/[.]push\b/.Add/
/[.]concat\b/.Concat/
/[.]keys[(][)]/.Keys/
/\bStringTools.lpad\b/PadLeft/
/\bStringTools.rpad\b/PadRight/

/\bNull[<](LONGID)[>]/$1?/
