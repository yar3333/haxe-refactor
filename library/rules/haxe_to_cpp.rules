// Haxe to C++

ID = [_a-zA-Z][_a-zA-Z0-9]*
VALUE = ID(?:[.]ID)*
TYPE = ID(?:\s*<[^>]+>)?

/override\s+//

/import\s+(VALUE);/#include "$1"/

/:(\s*)String/:$1string/
/:(\s*)Int/:$1int/
/:(\s*)Float/:$1double/
/:(\s*)Bool/:$1BOOL/
/:(\s*)Void/:$1void/

/\bpackage\b/namespace/

/typedef\s+(ID)\s*=/struct $1/
/var\s+(ID)\s*:\s*(TYPE)/$2 $1/

/var\s+(ID)\s*=/auto $1 =/

/([(,;]\s*)(ID)\s*:\s*(ID)/$1$3 $2/

/function\s+(ID[(][^)]*[)])\s*:\s*(TYPE)/$2 $1/
/function\s+(ID[(][^)]*[)])/void $1/

/\bpublic\b/public:/
/\bprivate\b/protected:/

/for\s*[(]\s*(ID)\s+in\s+(VALUE)\s*[)]\s*{/for (int i=0; i<$2.length; i++)\n{\nauto $1 = $2[i];\n/m

/void\s+toString/string toString/
