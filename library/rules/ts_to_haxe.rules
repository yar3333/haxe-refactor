ID = [_a-zA-Z][_a-zA-Z0-9]*
FUNC = ID(?:<\s*ID(?:\s*,\s*ID)*\s*>)?\s*
TYPE = (?:(?:ID|\{[^}]*\})(?:\[\])*\s*)
TYPE_COMPLEX = (?:TYPE|\(ID\s[:]\s*TYPE(?:,\s*ID\s[:]\s*TYPE)\)\s*=>\s*TYPE)
INT = [0-9]+(?:e[-+][0-9]+)?
FLOAT = [0-9]+(?:[.][0-9]+)?(?:e[-+][0-9]+)?
NUMBER = (?:INT|FLOAT)
VALUE = (?:ID|NUMBER)
ARGS = (?:\s*ID\s*(?:,\s*ID\s*)*)?
KEYWORDS = \b(?:new|return|var|class|package|if|else|import|using)\b
SPACE = [ \t]+
SPACEOPT = [ \t]*

/(?:export\s+)?enum\s+(ID)\s*\{\s*\}((?:\s*(?:export\s+)?var\s+ID[:]\s*\1\s*;)+)/enum $1\n\t{$2\n\t}/s
/(enum\s+)(ID)(\s*{[^}]*)(?:export\s+)var\s+(ID)\s*[:]\s*\2;/$1$2$3\t$4;/r

/\n(SPACEOPT)export(\s+(?:class|interface)[^\n{]+)\{/\n$1extern$2\n$1{/
/\n(SPACEOPT)constructor\s*\(/\n$1function new(/
/\n(SPACEOPT)(ID)[?]\s*[:]\s*(TYPE_COMPLEX)\s*;/\n$1@:optional var $2 : $3;/
/\n(SPACEOPT(?:\s*static\s+)?)(ID)\s*[:]\s*(TYPE_COMPLEX)\s*;/\n$1var $2 : $3;/
/\n(SPACEOPT)(ID)\s*\(/\n$1function $2(/

/[:](\s*)\{([^}]*ID\s*[:]\s*TYPE);/:$1{$2,/r
/SPACEOPT,(\s*)\}/$1}/

/([:]\s*)\(\s*\)\s*[=][>]\s*/$1void$2->

/([:]\s*)\(([^)]+?),\s*ID\s*:\s*(TYPE)\)\s*[=][>]\s*/$1($2)=>$3->/r

/([:]\s*)\(ID\s*:\s*(TYPE)\)\s*[=][>]\s*/$1$2->/r
/(ID)\?\s*\:\s*(TYPE)/?$1:$2/

TYPE_PREFIX = [:]\s*|->\s*
/(TYPE_PREFIX)number/$1Float/
/(TYPE_PREFIX)any/$1Dynamic/
/(TYPE_PREFIX)string/$1String/
/(TYPE_PREFIX)void/$1Void/
/(TYPE_PREFIX)boolean/$1Bool/

/([:]\s*)(ID|\{[^}]*\})\[\]\[\]\[\]/$1Array<Array<Array<$2>>>/
/([:]\s*)(ID|\{[^}]*\})\[\]\[\]/$1Array<Array<$2>>/
/([:]\s*)(ID|\{[^}]*\})\[\]/$1Array<$2>/

/{\s*\n(?:\n)+(\s+(?:function|var))/{\n$1/


~(SPACEOPT)(/[*][*].*?)[*]/\n\s*//[ \t]*deprecated[ \t]*\n~$1$2* @deprected\n$1 */\n~s
~\n(SPACEOPT)// DEPRECATED(?:SPACEOPT)\n~\n$1/**\n$1 * @deprecated\n$1 */\n~
